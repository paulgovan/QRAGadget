[{"path":"http://paulgovan.github.io/QRAGadget/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Paul Govan. Author, maintainer, copyright holder.","code":""},{"path":"http://paulgovan.github.io/QRAGadget/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Govan P (2023). QRAGadget: 'Shiny' Gadget Interactive 'QRA' Visualizations. https://github.com/paulgovan/qragadget, http://paulgovan.github.io/QRAGadget/.","code":"@Manual{,   title = {QRAGadget: A 'Shiny' Gadget for Interactive 'QRA' Visualizations},   author = {Paul Govan},   year = {2023},   note = {https://github.com/paulgovan/qragadget, http://paulgovan.github.io/QRAGadget/}, }"},{"path":"http://paulgovan.github.io/QRAGadget/index.html","id":"qragadget","dir":"","previous_headings":"","what":"A Shiny Gadget for Interactive QRA Visualizations","title":"A Shiny Gadget for Interactive QRA Visualizations","text":"Easily create Quantitative Risk Analysis (QRA) visualizations Choose numerous color palettes, basemaps, different configurations","code":""},{"path":"http://paulgovan.github.io/QRAGadget/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"A Shiny Gadget for Interactive QRA Visualizations","text":"QRAGadget Shiny Gadget creating interactive QRA visualizations. QRAGadget powered excellent leaflet raster packages. gadget initially intended interested creating QRA visualizations, may also generally applicable anyone interested visualizing raster data interactive map.","code":""},{"path":"http://paulgovan.github.io/QRAGadget/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"A Shiny Gadget for Interactive QRA Visualizations","text":"install QRAGadget R: install latest developmental version: installation, using RStudio (v0.99.878 later), gadget appear Addins dropdown menu. Otherwise, launch gadget, simply type:","code":"install.packages(\"QRAGadget\") devtools::install_github('paulgovan/QRAGadget') QRAGadget::QRAGadget()"},{"path":[]},{"path":"http://paulgovan.github.io/QRAGadget/index.html","id":"inputoutput","dir":"","previous_headings":"","what":"Input/Output","title":"A Shiny Gadget for Interactive QRA Visualizations","text":"QRAGadget currently accepts two primary types raster data: (1) file upload (csv format) (2) R data.frame object. order explore gadget, create dummy data: launch app: Launching app brings Input/Output page. find dummy data, click R Object Data Type, select sample dropdown menu. Choose name output html file. customizing map, clicking Done create standalone html file current working directory (sure save previously created map file!). Click Cancel time start . bookmark app time, click Bookmark button, create unique url current state app.","code":"sample <- matrix(runif(36*36), ncol = 36, nrow = 36) %>%   data.frame() QRAGadget::QRAGadget()"},{"path":"http://paulgovan.github.io/QRAGadget/index.html","id":"raster","dir":"","previous_headings":"","what":"Raster","title":"A Shiny Gadget for Interactive QRA Visualizations","text":"format raster image, click Raster icon. number options specifying extents raster image (XMIN, XMAX, YMIN, YMAX) well projection raster layer. important raster layer tagged correct project coordinate reference system. specify bins color palette, click Number select total number bins Cuts select number actual cut values bin. Finally, option disaggregate raster layer create new one higher resolution (smaller cells) also locally interpolating new cell values (smoothed cells). disaggregate raster layer, enter number cells disaggregate. example, use default values XMIN, XMAX, YMIN, YMAX well given projection, enter 5 number cells disaggregate:","code":""},{"path":"http://paulgovan.github.io/QRAGadget/index.html","id":"map","dir":"","previous_headings":"","what":"Map","title":"A Shiny Gadget for Interactive QRA Visualizations","text":"view interactive map, click Map icon. Click Reset button time order reset extents map.","code":""},{"path":"http://paulgovan.github.io/QRAGadget/index.html","id":"preferences","dir":"","previous_headings":"","what":"Preferences","title":"A Shiny Gadget for Interactive QRA Visualizations","text":"Preferences tab number options customizing map: title map color palette (see colorbrewer2.org) basemap (see http://leaflet-extras.github.io) control position legend position try options, select PuOr Color Palette, Esri.WorldImagery Map Tile, move Control Position bottomleft:  result following interactive map:","code":""},{"path":"http://paulgovan.github.io/QRAGadget/reference/QRAGadget.html","id":null,"dir":"Reference","previous_headings":"","what":"A 'Shiny' Gadget for Interactive QRA Visualizations. — QRAGadget","title":"A 'Shiny' Gadget for Interactive QRA Visualizations. — QRAGadget","text":"Upload raster data easily create interactive QRA visualizations. Select numerous color palettes, basemaps, different configurations.","code":""},{"path":"http://paulgovan.github.io/QRAGadget/reference/QRAGadget.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A 'Shiny' Gadget for Interactive QRA Visualizations. — QRAGadget","text":"","code":"QRAGadget()"},{"path":"http://paulgovan.github.io/QRAGadget/reference/QRAGadget.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A 'Shiny' Gadget for Interactive QRA Visualizations. — QRAGadget","text":"standalone html file","code":""},{"path":"http://paulgovan.github.io/QRAGadget/reference/QRAGadget.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A 'Shiny' Gadget for Interactive QRA Visualizations. — QRAGadget","text":"","code":"if (interactive()) {   QRAGadget() }"},{"path":"http://paulgovan.github.io/QRAGadget/reference/matrixInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Matrix input — matrixInput","title":"Matrix input — matrixInput","text":"Creates adjustable-length matrix input.","code":""},{"path":"http://paulgovan.github.io/QRAGadget/reference/matrixInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matrix input — matrixInput","text":"","code":"matrixInput(inputId, label, data)"},{"path":"http://paulgovan.github.io/QRAGadget/reference/matrixInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matrix input — matrixInput","text":"inputId Input variable assign control's value . label Display label control. data initial values use matrix.","code":""},{"path":[]},{"path":"http://paulgovan.github.io/QRAGadget/news/index.html","id":"qragadget-030","dir":"Changelog","previous_headings":"","what":"QRAGadget 0.3.0","title":"QRAGadget 0.3.0","text":"CRAN release: 2023-06-23","code":""},{"path":[]},{"path":"http://paulgovan.github.io/QRAGadget/news/index.html","id":"minor-improvements-and-bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Minor Improvements and Bug Fixes","title":"QRAGadget 0.2.0","text":"UI now uses current dependency fontawesome.","code":""}]
