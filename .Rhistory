source('~/Documents/QRAGadget/R/QRAGadget.R')
library(QRAGadget)
devtools::install()
QRAGadget:::QRAGadget()
source('~/Documents/QRAGadget/R/QRAGadget.R')
library(QRAGadget)
devtools::install()
library(QRAGadget)
QRAGadget:::QRAGadget()
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
QRAGadget()
help(textInput )
source('~/Documents/QRAGadget/R/QRAGadget.R')
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
paste0("myMap", ".html")
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
library(QRAGadget)
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
library(QRAGadget)
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
library(shiny)
help("checkboxInput")
help("disaggregate")
source('~/Documents/QRAGadget/R/QRAGadget.R')
source('~/Documents/QRAGadget/R/QRAGadget.R')
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
help("disaggregate")
help("numericInput)
help("numericInput")
help("numericInput")
source('~/Documents/QRAGadget/R/QRAGadget.R')
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
library(QRAGadget)
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
library(QRAGadget)
help(ls)
help(force)
source('~/Documents/QRAGadget/R/QRAGadget.R')
devtools::load_all(".")
library(QRAGadget)
devtools::load_all(".")
library(QRAGadget)
source('~/Documents/QRAGadget/R/QRAGadget.R')
devtools::load_all(".")
library(QRAGadget)
devtools::load_all(".")
library(QRAGadget)
source('~/Documents/QRAGadget/R/QRAGadget.R')
devtools::load_all(".")
library(QRAGadget)
source('~/Documents/QRAGadget/R/QRAGadget.R')
devtools::load_all(".")
library(QRAGadget)
help(brewer_pal)
??brewer_pal
devtools::load_all(".")
library(QRAGadget)
initBins = c(1e-16, 1e-15, 1e-14, 1e-13, 1e-12, 1e-11, 1e-10, 1e-9, 1e-8, 1e-7, 1e-6, 1e-5, 0.0001)
initBins = matrix(initBins, ncol = 1)
initBins = data.frame(initBins)
source('~/Documents/QRAGadget/R/QRAGadget.R')
source('~/Documents/QRAGadget/R/QRAGadget.R')
devtools::load_all(".")
library(QRAGadget)
devtools::install_github('paulgovan/QRAGadget')
QRAGadget:::QRAGadget()
library(dplyr)
QRAGadget:::QRAGadget()
help(miniPage)
library(miniUI)
help(miniPage)
QRAGadget:::QRAGadget()
devtools::load_all(".")
library(QRAGadget)
devtools::load_all(".")
library(QRAGadget)
devtools::load_all(".")
devtools::load_all(".")
library(QRAGadget)
devtools::load_all(".")
library(QRAGadget)
devtools::load_all(".")
help(crs)
help(values)
devtools::load_all(".")
library(QRAGadget)
devtools::load_all(".")
QRAGadget()
library(miniUI)
devtools::load_all(".")
library(QRAGadget)
devtools::install_github('paulgovan/QRAGadget')
library(QRAGadget)
QRAGadget:::QRAGadget()
sample <- matrix(runif(36*36), ncol = 36, nrow = 36) %>%
data.frame()
library(dplyr)
sample <- matrix(runif(36*36), ncol = 36, nrow = 36) %>%
data.frame()
QRAGadget:::QRAGadget()
QRAGadget:::QRAGadget()
install.packages(c("heatmaply", "rhandsontable", "shiny", "shinydashboard"))
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget::QRAGadget()
source('~/Documents/QRAGadget/R/QRAGadget.R')
library(magrittr)
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
initBins = c(1e-16, 1e-15, 1e-14, 1e-13, 1e-12, 1e-11, 1e-10, 1e-9, 1e-8, 1e-7, 1e-6, 1e-5, 0.0001)
initBins <- matrix(initBins, ncol = 1)
initBins <- data.frame(initBins)
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
library(miniUI)
QRAGadget()
QRAGadget()
install.packages("rgdal")
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
help("bookmarkButton")
help("enableBookmarking")
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
help(matrixInput)
QRAGadget()
source('~/Documents/QRAGadget/R/QRAGadget.R')
library(QRAGadget)
help("read.csv")
source('~/Documents/QRAGadget/R/QRAGadget.R')
library(QRAGadget)
library(QRAGadget)
library(magrittr)
source('~/Documents/QRAGadget/R/QRAGadget.R')
library(QRAGadget)
source('~/Documents/QRAGadget/R/QRAGadget.R')
library(magrittr)
library(miniUI)
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
library(shiny)
QRAGadget()
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
library(rstudioapi)
source('~/Documents/QRAGadget/R/QRAGadget.R')
library(QRAGadget)
library(QRAGadget)
source('~/Documents/QRAGadget/R/QRAGadget.R')
library(QRAGadget)
library(QRAGadget)
devtools::load_all(".")
library(QRAGadget)
devtools::load_all(".")
library(QRAGadget)
source('~/Documents/QRAGadget/R/QRAGadget.R')
devtools::load_all(".")
library(QRAGadget)
devtools::build_win()
source('~/Documents/QRAGadget/R/QRAGadget.R')
devtools::load_all(".")
devtools::load_all(".")
source('~/Documents/QRAGadget/R/QRAGadget.R')
devtools::load_all(".")
library(QRAGadget)
devtools::load_all(".")
library(QRAGadget)
devtools::load_all(".")
library(QRAGadget)
QRAGadget()
library(miniUI)
QRAGadget::QRAGadget()
devtools::build_win()
devtools::load_all(".")
library(QRAGadget)
devtools::release()
install.packages(c("curl", "digest", "jsonlite", "R6"))
devtools::release()
devtools::release()
devtools::release()
devtools::release()
source('~/Documents/QRAGadget/R/QRAGadget.R')
devtools::load_all(".")
library(QRAGadget)
QRAGadget()
QRAGadget::QRAGadget()
source('~/Documents/QRAGadget/R/QRAGadget.R')
devtools::load_all(".")
library(QRAGadget)
QRAGadget::QRAGadget()
devtools::install_github("hrbrmstr/swagger")
library(swagger)
help("swag")
help(swagger)
source('~/Documents/QRAGadget/R/QRAGadget.R')
library(magrittr)
labelFormat2 <-
function (prefix = "",
suffix = "",
between = " &ndash; ",
digits = 3,
big.mark = ",",
transform = identity)
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
library(shiny)
QRAGadget()
library(miniUI)
QRAGadget()
source('~/Documents/QRAGadget/R/tableinput.R')
QRAGadget()
library(raster)
library(leaflet)
QRAGadget()
source('~/Documents/QRAGadget/R/QRAGadget.R')
library(magrittr)
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget::QRAGadget()
library(shinyWidgets)
help("radioGroupButtons")
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
QRAGadget::QRAGadget()
library(shiny)
library(miniUI)
QRAGadget()
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
source('~/Documents/QRAGadget/R/QRAGadget.R')
QRAGadget()
library(leaflet)
help("addTiles")
source("~/Documents/QRAGadget/R/QRAGadget.R")
QRAGadget::QRAGadget()
library(QRAGadget)
QRAGadget::QRAGadget()
install.packages("shinyMatrix")
source("~/Documents/QRAGadget/R/tableinput.R")
source("~/Documents/QRAGadget/R/QRAGadget.R")
QRAGadget::QRAGadget()
library(QRAGadget)
source("~/Documents/QRAGadget/R/QRAGadget.R")
QRAGadget::QRAGadget()
library(QRAGadget)
update.packages()
QRAGadget::QRAGadget()
library(QRAGadget)
?addResourcePath
?system.path
?system.file
devtools::install_github("rstudio/shiny-incubator")
source("~/Documents/QRAGadget/R/tableinput.R")
QRAGadget::QRAGadget()
library(QRAGadget)
usethis::use_pkgdown_github_pages()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
usethis::use_github_release()
usethis::use_dev_version()
usethis::use_news_md()
pkgdown::build_site()
usethis::use_citation()
citation("QRAGadget")
pkgdown::build_site()
usethis::use_release_issue()
usethis::use_github_links()
usethis::use_github_links(overwrite = TRUE)
urlchecker::url_check()
evtools::check(remote = TRUE, manual = TRUE)
devtools::check(remote = TRUE, manual = TRUE)
install.packages("QRAGadget")
devtools::check(remote = TRUE, manual = TRUE)
usethis::use_cran_comments()
devtools::check_win_devel()
usethis::use_readme_rmd()
usethis::use_vignette("Usage")
usethis::use_tidy_contributing()
usethis::use_code_of_conduct()
usethis::use_code_of_conduct("paul.govan2@gmail.com")
usethis::use_github_action("check-standard")
usethis::use_lifecycle_badge("active")
usethis::use_lifecycle_badge("stable")
usethis::use_github_action("pkgdown")
pkgcheck::use_github_action_pkgcheck()
codemetar::write_codemeta()
